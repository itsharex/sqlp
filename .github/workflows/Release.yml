publish:
  permissions:
    contents: write
  strategy:
    fail-fast: false
    matrix:
      include:
        - platform: "windows-latest"
          args: ""

  runs-on: ${{ matrix.platform }}
  steps:
    - uses: actions/checkout@v4

    - name: setup node
      uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - uses: pnpm/action-setup@v3
      name: Install pnpm
      with:
        version: 9
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - uses: actions/cache@v4
      name: Setup pnpm cache
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --no-frozen-lockfile

    # Remove the Rust installation steps if they are not needed for Windows.
    #- name: install Rust stable
    #  uses: dtolnay/rust-toolchain@stable
    #  with:
    #    targets: ''

    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        cache-on-failure: true
        workspaces: './src-tauri -> target'
        key: ${{ runner.os }}

    # Remove the Ubuntu-only dependencies installation step as it's not relevant for Windows.
    #- name: install dependencies (ubuntu only)
    #  if: matrix.platform == 'ubuntu-22.04'
    #  run: |
    #    sudo apt-get update
    #    sudo apt-get install -y webkit2gtk-4.1 libayatana-appindicator3-dev librsvg2-dev patchelf

    - uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
      with:
        tagName: v__VERSION__
        releaseName: "InsightSQL v__VERSION__"
        releaseBody: "See the assets to download this version and install."
        releaseDraft: true
        prerelease: false
        args: ${{ matrix.args }}